{
    "type": "object",
    "properties": {
        "Authorization": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "example": {
                "active": true,
                "callout": {
                    "active": true,
                    "calloutAuth": {
                        "domain": "example_domain",
                        "password": "example_password",
                        "preemptive": true,
                        "username": "example_user"
                    },
                    "calloutBaseurl": "https://www.example.com/callout/AccountEdit",
                    "calloutParams": {
                        "AccountName": "<Account.Name>",
                        "AccountNumber": "<Account.Number>"
                    },
                    "calloutRetry": true,
                    "description": "Callout when an account is edited",
                    "eventTypeName": "AccountEdit",
                    "httpMethod": "POST",
                    "name": "Callout for Account Edited",
                    "requiredAuth": true
                },
                "calloutActive": true,
                "communicationProfileId": "6e569e1e05f040eda51a927b140c0ac5",
                "description": "Notification sent out when an account is edited",
                "emailActive": true,
                "emailTemplateId": "6e569e1e05f040eda51a927b140c0ac6",
                "eventTypeName": "AccountEdit",
                "filterRule": {
                    "condition": "Account.Balance >= _VIP_BALANCE_AMOUNT && Account.Status == _ACCOUNT_STATUS",
                    "description": "Filter rule to test if an account is a VIP account",
                    "parameters": {
                        "_ACCOUNT_STATUS": {
                            "description": "The status of the VIP Account",
                            "displayName": "VIP Account Status",
                            "options": [
                                "Draft",
                                "Active",
                                "Canceled"
                            ],
                            "valueType": "STRING"
                        },
                        "_VIP_BALANCE_AMOUNT": {
                            "description": "The minimum account balance",
                            "displayName": "VIP Account Balance",
                            "valueType": "BIG_DECIMAL"
                        }
                    }
                },
                "filterRuleParams": {
                    "_EDITED_FROM": "UI",
                    "_VIP_ACCOUNT_BALANCE": "100000"
                },
                "name": "Account Edit Notification"
            },
            "properties": {
                "active": {
                    "default": true,
                    "description": "The status of the notification definition. The default value is true.",
                    "type": "boolean"
                },
                "callout": {
                    "properties": {
                        "active": {
                            "default": true,
                            "description": "The status of the callout. The default is true.",
                            "type": "boolean"
                        },
                        "calloutAuth": {
                            "description": "If requiredAuth is true, this object is required.",
                            "properties": {
                                "domain": {
                                    "description": "The domain of the callout auth.",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "The field is required when requiredAuth is true.",
                                    "type": "string"
                                },
                                "preemptive": {
                                    "description": "Set this field to `true` if you want to enable the preemptive authentication.",
                                    "type": "boolean"
                                },
                                "username": {
                                    "description": "The field is required when requiredAuth is true.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "calloutBaseurl": {
                            "description": "The callout URL. It must start with 'https://'",
                            "example": "https://***",
                            "format": "url",
                            "minLength": 10,
                            "type": "string"
                        },
                        "calloutParams": {
                            "additionalProperties": {
                                "description": "The key is the parameter name. The value is a merge field with angle brackets.\n",
                                "type": "string"
                            },
                            "description": "A key-value map of merge fields of this callout.\n",
                            "title": "calloutParams",
                            "type": "object"
                        },
                        "calloutRetry": {
                            "default": true,
                            "description": "Specified whether to retry the callout when the callout fails. The default is true.",
                            "type": "boolean"
                        },
                        "description": {
                            "description": "Description for the callout.",
                            "maxLength": 255,
                            "type": "string"
                        },
                        "eventTypeName": {
                            "description": "The name of the event type.",
                            "minLength": 1,
                            "type": "string"
                        },
                        "httpMethod": {
                            "description": "The HTTP method of the callout.",
                            "enum": [
                                "GET",
                                "PUT",
                                "POST",
                                "DELETE"
                            ],
                            "example": "POST",
                            "type": "string"
                        },
                        "name": {
                            "description": "The name of the created callout.",
                            "maxLength": 255,
                            "type": "string"
                        },
                        "requiredAuth": {
                            "description": "Specifies whether the callout requires auth.",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "eventTypeName",
                        "name",
                        "calloutBaseurl",
                        "httpMethod",
                        "requiredAuth"
                    ],
                    "type": "object"
                },
                "calloutActive": {
                    "default": false,
                    "description": "The status of the callout action. Default value is false.",
                    "type": "boolean"
                },
                "communicationProfileId": {
                    "description": "The profile that notification definition belongs to. If you do not pass the communicationProfileId, notification service will be automatically added to the 'Default Profile'.",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the notification definition.",
                    "maxLength": 255,
                    "type": "string"
                },
                "emailActive": {
                    "default": false,
                    "description": "The status of the email action. The default value is false.",
                    "type": "boolean"
                },
                "emailTemplateId": {
                    "description": "The ID of the email template. If emailActive is true, an email template is required. And EventType of the email template MUST be the same as the eventType.",
                    "format": "uuid",
                    "type": "string"
                },
                "eventTypeName": {
                    "description": "The name of the event type. \n",
                    "minLength": 1,
                    "type": "string"
                },
                "eventTypeNamespace": {
                    "description": "The namespace of the `eventTypeName` field. The `eventTypeName` has the `user.notification` namespace by default. \n\nNote that if the `eventTypeName` is a standard event type, you must specify the `com.zuora.notification` namespace; otherwise, you will get an error.\n\nFor example, if you want to create a notification definition on the `OrderActionProcessed` event, you must specify `com.zuora.notification` for this field.\n",
                    "type": "string"
                },
                "filterRule": {
                    "description": "",
                    "properties": {
                        "condition": {
                            "description": "The filter rule conditions, written in [JEXL](http://commons.apache.org/proper/commons-jexl/).\nThe rule might contain event context merge fields and data source merge fields. Data source merge fields must be from [the base object of the event or from the joined objects of the base object](https://knowledgecenter.zuora.com/DC_Developers/M_Export_ZOQL#Data_Sources_and_Objects). Notifications with invalid merge fields will fail to evaluate, thus will not be invoked. For example, to filter an invoice posted notification to only invoices with an amount over 1000, you would define the following condition:\n\n```Invoice.Amount > 1000```\n\nThere are conventions and keywords you need to be aware of. For example:\n\n* `Invoice.Amount` refers to the `Amount` field of the Zuora object `Invoice`.\n\n* Unlike Event Triggers, there is no access to variables with the `_old` suffix. Fields with the `_old` suffix are only available on Event Trigger conditions.\n",
                            "example": "Account.Balance >= _VIP_BALANCE_AMOUNT && Account.Status == _ACCOUNT_STATUS",
                            "type": "string"
                        },
                        "description": {
                            "description": "The description of the filter rule.",
                            "maxLength": 255,
                            "type": "string"
                        },
                        "parameters": {
                            "additionalProperties": {
                                "description": "Definition of a filter rule parameter.\n",
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "type": "string"
                                    },
                                    "displayName": {
                                        "description": "The display name of the parameter.\n",
                                        "maxLength": 255,
                                        "type": "string"
                                    },
                                    "options": {
                                        "description": "The option values of the parameter.\n",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "valueType": {
                                        "description": "The type of the value.\n",
                                        "enum": [
                                            "STRING",
                                            "BYTE",
                                            "SHORT",
                                            "CHARACTER",
                                            "INTEGER",
                                            "LONG",
                                            "FLOAT",
                                            "DOUBLE",
                                            "BOOLEAN",
                                            "BIG_INTEGER",
                                            "BIG_DECIMAL",
                                            "LOCAL_DATE",
                                            "LOCAL_DATE_TIME",
                                            "TIMESTAMP",
                                            "BYTE_ARRAY",
                                            "SHORT_ARRAY",
                                            "CHARACTER_ARRAY",
                                            "INTEGER_ARRAY",
                                            "FLOAT_ARRAY",
                                            "DOUBLE_ARRAY",
                                            "BOOLEAN_ARRAY",
                                            "STRING_ARRAY",
                                            "BIG_INTEGER_ARRAY",
                                            "BIG_DECIMAL_ARRAY",
                                            "LOCAL_DATE_ARRAY",
                                            "LOCAL_DATE_TIME_ARRAY",
                                            "TIMESTAMP_ARRAY"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "title": "parameter",
                                "type": "object"
                            },
                            "description": "The parameters of the filter rule and their name must match those in the filter rule. And all parameters must be defined in the event type payload. The name of parameters can't be duplicate. The following reserved keywords should not be used as a parameter name: `AttachmentList`, `RecipientList`, `RecipientType`, `Exceptions`, `OCP_OBJECT_TYPE`, `OCP_OBJECT_ID`, `OCP_TRIGGER_BY`\n",
                            "title": "parameters",
                            "type": "object"
                        }
                    },
                    "required": [
                        "condition",
                        "parameters"
                    ],
                    "type": "object"
                },
                "filterRuleParams": {
                    "additionalProperties": {
                        "description": "The following reserved key words should not be used as a parameter name: `AttachmentList`, `RecipientList`, `RecipientType`, `Exceptions`, `OCP_OBJECT_TYPE`, `OCP_OBJECT_ID`, `OCP_TRIGGER_BY`. `Include.Attachment` is a special boolean parameter. By specifying this parameter, you can tell a notification whose event type is based on Invoice to include attachments while sending emails.\n",
                        "type": "string"
                    },
                    "description": "The parameter values used to configure the filter rule.\n",
                    "title": "filterRuleParams",
                    "type": "object"
                },
                "name": {
                    "description": "The name of the notification definition, unique per communication profile.",
                    "maxLength": 255,
                    "type": "string"
                }
            },
            "required": [
                "eventTypeName",
                "name"
            ],
            "type": "object"
        },
        "Zuora_Track_Id": {
            "required": false,
            "type": "string",
            "maxLength": 64
        },
        "Zuora_Entity_Ids": {
            "required": false,
            "type": "string"
        }
    }
}